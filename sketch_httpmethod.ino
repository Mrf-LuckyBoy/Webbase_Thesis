#include <WiFi.h>
#include <HTTPClient.h>
#include <string>

float Vpv1_V [148] = {558.4, 612, 621.4, 601.3, 579.4, 559.7, 585.7, 563.3, 538.7, 609.9, 559.5, 579.3, 576.8, 566.8, 576, 574.1, 565, 533.5, 553.6, 605.6, 611.9, 610.1, 605.6, 610.4, 606.4, 610.3, 611.8, 608.2, 613.3, 613.4, 620.9, 599.5, 610.4, 603.7, 601.9, 604.6, 606.9, 609, 554.6, 533.9, 608.3, 615.7, 612.8, 613.2, 617.3, 606.3, 612.8, 629.7, 614.5, 619.1, 610.1, 617.6, 614.5, 619.1, 608.4, 607.7, 601.8, 594, 587.5, 592.4, 600.7, 593.4, 606.9, 602.2, 599, 608.5, 606.5, 601, 608.5, 623.5, 622.2, 613.3, 605.2, 603.3, 597.3, 595.1, 587.5, 576.7, 589.4, 588.7, 576.2, 569, 572.1, 578, 583.4, 594.4, 590, 584, 570.3, 571.9, 564.1, 562.4, 573.9, 558.7, 562.4, 571.1, 562.1, 568.1, 576.7, 564.5, 584.8, 602, 570, 575.1, 588.6, 601.1, 604.8, 595.6, 579.4, 595, 585.2, 587.3, 590.1, 591.7, 592.8, 598.1, 594.7, 602.5, 599.1, 605.6, 600.3, 600.1, 589.9, 587.9, 600.3, 606, 592.2, 588.8, 589.4, 603.6, 604, 589.1, 601.8, 617.4, 601.3, 609.2, 607.9, 584.7, 608.8, 559.4, 566.3, 561.2, 577.3, 587.8, 278.2, 547.9, 606.6, 491.1};
float Ipv1_A [148] = {0, 0, 0, 0, 0.1, 0.1, 0.1, 0.1, 0.2, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.3, 0.7, 0.5, 0.4, 0.4, 0.4, 0.5, 0.6, 0.9, 0.9, 0.9, 1.1, 1.5, 1.6, 1.6, 1.4, 1.2, 0.6, 0.3, 0.2, 0.2, 0.5, 0.9, 0.9, 1, 1.1, 1.2, 1.2, 1.5, 1.4, 1.6, 2, 2.3, 2.5, 2.6, 2.5, 2.3, 2.8, 3, 4.5, 5.1, 4.2, 3.1, 2.5, 1.6, 1.6, 1.7, 1.3, 1.6, 1.6, 1.8, 1.8, 2.1, 3.2, 3.7, 3.9, 4.3, 4.6, 5, 6.6, 5.2, 4.7, 8.2, 7.4, 7.5, 5.9, 5.1, 4.6, 4.5, 5.5, 7.8, 8.7, 8.4, 4.1, 8.4, 8.3, 8, 7.5, 7.1, 7.7, 7.4, 7.1, 7.3, 2.9, 7, 3.2, 3, 1.5, 2.1, 7, 6.9, 3.2, 5.2, 3.8, 3.2, 5.2, 3.8, 3.2, 1.8, 1.9, 2.2, 2.2, 2.2, 2.1, 1.6, 1.3, 1.1, 1.1, 1, 1.2, 1.4, 1.5, 1.9, 1.7, 1.4, 1, 0.7, 0.7, 0.6, 0.5, 0.4, 0.2, 0.2, 0.2, 0.1, 0, 0, 0, 0, 0, 0};
float Ppv1_W [148]= {0, 0, 0, 0, 57.9, 55.9, 58.5, 56.3, 107.7, 60.9, 55.9, 57.9, 57.6, 56.6, 57.6, 57.4, 56.5, 160, 387.5, 302.8, 244.7, 244, 242.2, 305.2, 363.8, 549.2, 550.6, 547.3, 674.6, 920.1, 993.4, 959.2, 854.5, 724.4, 361.1, 181.3, 121.3, 121.8, 277.3, 480.5, 547.4, 615.7, 674, 735.8, 740.7, 909.4, 857.9, 1007.5, 1229, 1423.9, 1525.2, 1605.7, 1536.2, 1423.9, 1703.5, 1823.1, 2708.1, 3029.4, 2467.5, 1836.4, 1501.7, 949.4, 971, 1023.7, 778.7, 973.6, 970.4, 1081.8, 1095.3, 1309.3, 1991, 2269.2, 2360.2, 2594.1, 2747.5, 2975.5, 3877.5, 2998.8, 2770.1, 4827.3, 4263.8, 4267.5, 3375.3, 2947.8, 2683.6, 2674.8, 3245, 4555.2, 4961.6, 4803.9, 2312.8, 4724.1, 4763.3, 4469.6, 4218, 4054.8, 4328.1, 4203.9, 4094.5, 4120.8, 1695.9, 4214, 1824, 1725.3, 882.9, 1262.3, 4233.6, 4109.6, 1854, 3094, 2223.7, 1879.3, 3068.5, 2248.4, 1896.9, 1076.5, 1129.9, 1325.5, 1318, 1332.3, 1260.6, 960.1, 766.8, 646.6, 660.3, 606, 710.6, 824.3, 884.1, 1146.8, 1026.8, 824.7, 601.8, 432.1, 420.9, 365.5, 303.9, 233.8, 121.7, 111.8, 113.2, 56.1, 0, 0, 0, 0, 0, 0};
float Pac_W [148] = {0, 0, 0, 0, 0, 0, 0, 0, 71.1, 0, 0, 0, 0, 0, 0, 0, 0, 141.6, 367.8, 283, 212, 211.8, 208.6, 283.5, 348.3, 495.2, 521.3, 518.3, 611.2, 846.1, 924.7, 880.8, 770.4, 684.8, 328.1, 141.4, 70.7, 70.6, 239.8, 445.5, 507.5, 581.7, 637.7, 689.9, 699.7, 819.9, 817.7, 942.9, 1154.1, 1316, 1416.5, 1471.8, 1393.7, 1326.4, 1577.6, 1703.6, 2547.2, 2781, 2284.2, 1710.9, 1380.7, 893.7, 921, 966, 707.7, 943.3, 868.8, 978.5, 994.4, 1227.2, 1838.1, 2131.9, 2161.4, 2391.8, 2544.6, 2728.6, 3571.9, 2810.7, 2592.7, 4603.8, 4030, 4016.6, 3095.9, 2723.3, 2507.6, 2463.5, 3008.1, 4377.7, 4698.6, 4550.1, 2138.7, 4499.1, 4488.1, 4294.5, 4014.5, 3879.9, 4097.2, 3962.2, 3860.8, 3908, 1580, 3969.5, 1674.1, 1612.5, 828.8, 1145.9, 3985.4, 3822, 1737.8, 2929.8, 2084, 1771.2, 2832, 2128.9, 1770.7, 994.5, 1042.8, 1213.3, 1222.3, 1244.3, 1218.6, 873.6, 700.8, 624.3, 594.6, 542.5, 642.7, 776, 807.2, 1055.4, 919.5, 788.9, 574.4, 416.9, 393.3, 358.7, 286.7, 214.7, 71.3, 71.2, 71.1, 0, 0, 0, 0, 0, 0, 0};
float Epv1_today_kWh [148] = {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.1, 0.1, 0.1, 0.1, 0.1, 0.2, 0.2, 0.2, 0.3, 0.3, 0.4, 0.4, 0.5, 0.6, 0.7, 0.7, 0.8, 0.8, 0.8, 0.8, 0.9, 0.9, 0.9, 1, 1, 1.1, 1.2, 1.2, 1.3, 1.4, 1.5, 1.6, 1.7, 1.8, 2, 2.1, 3.2, 3.4, 3.5, 3.9, 4.1, 4.3, 4.4, 4.5, 4.6, 4.7, 4.8, 4.9, 4.9, 5, 5.1, 5.2, 5.3, 5.5, 5.7, 5.9, 6.1, 6.4, 6.7, 7, 7.2, 7.5, 7.9, 8.2, 8.5, 8.8, 9, 9.2, 9.5, 9.8, 10.2, 10.3, 10.7, 11, 11.4, 11.8, 12.2, 12.5, 12.8, 13.2, 13.4, 13.8, 13.9, 14.1, 14.4, 14.6, 14.7, 14.8, 15, 15.4, 15.6, 15.8, 16.1, 16.2, 16.4, 16.6, 16.8, 16.9, 17, 17.1, 17.1, 17.2, 17.3, 17.4, 17.5, 17.5, 17.6, 17.6, 17.7, 17.7, 17.7, 17.8, 17.9, 18, 18.1, 18.1, 18.1, 18.2, 18.2, 18.2, 18.2, 18.2, 18.2, 18.3, 18.3, 18.3, 18.3, 0, 0, 0};
float Epv1_total_kWh [148]= {21600.2, 21600.2, 21600.2, 21600.2, 21600.2, 21600.2, 21600.2, 21600.2, 21600.2, 21600.2, 21600.2, 21600.2, 21600.2, 21600.2, 21600.2, 21600.2, 21600.2, 21600.2, 21600.3, 21600.3, 21600.3, 21600.3, 21600.3, 21600.4, 21600.4, 21600.4, 21600.5, 21600.5, 21600.6, 21600.6, 21600.7, 21600.8, 21600.9, 21600.9, 21601, 21601, 21601, 21601, 21601.1, 21601.1, 21601.1, 21601.2, 21601.2, 21601.3, 21601.4, 21601.4, 21601.5, 21601.6, 21601.7, 21601.8, 21601.9, 21602, 21602.2, 21602.3, 21603.4, 21603.6, 21603.7, 21604.1, 21604.3, 21604.5, 21604.6, 21604.7, 21604.8, 21604.9, 21605, 21605.1, 21605.1, 21605.2, 21605.3, 21605.4, 21605.5, 21605.7, 21605.9, 21606.1, 21606.3, 21606.6, 21606.9, 21607.2, 21607.4, 21607.7, 21608.1, 21608.4, 21608.7, 21609, 21609.2, 21609.4, 21609.7, 21610, 21610.4, 21610.5, 21610.9, 21611.2, 21611.6, 21612, 21612.4, 21612.7, 21613, 21613.4, 21613.6, 21614, 21614.1, 21614.3, 21614.6, 21614.8, 21614.9, 21615, 21615.2, 21615.6, 21615.8, 21616, 21616.3, 21616.4, 21616.6, 21616.8, 21617, 21617.1, 21617.2, 21617.3, 21617.3, 21617.4, 21617.5, 21617.6, 21617.7, 21617.7, 21617.8, 21617.8, 21617.9, 21617.9, 21617.9, 21618, 21618.1, 21618.2, 21618.3, 21618.3, 21618.3, 21618.4, 21618.4, 21618.4, 21618.4, 21618.4, 21618.4, 21618.5, 21618.5, 21618.5, 21618.5, 21618.5, 21618.5, 21618.5};
const char* ssid = ".._. --- --- _._";
const char* password = "meenahee";
const char* serverName = "http://192.168.65.118:8081/log";

unsigned long lastTime = 0;
unsigned long timerDelay = 1000;

void setup() {
  Serial.begin(115200);
  WiFi.begin(ssid, password);
  Serial.println("Connecting");
  while(WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("");
  Serial.print("Connected to WiFi network with IP Address: ");
  Serial.println(WiFi.localIP());
 
  Serial.println("Timer set to 5 seconds (timerDelay variable), it will take 5 seconds before publishing the first reading.");
}

String cT(float a) {
  String b = String(a);
   return b;
  }
  
void loop() {
  //delay(60000);
  for (int i = 0; i < 148; i++) {
    delay(10000);
    if ((millis() - lastTime) > timerDelay) {
    //Check WiFi connection status
    if(WiFi.status()== WL_CONNECTED){
      WiFiClient client;
      HTTPClient http;
      // Your Domain name with URL path or IP address with path
      http.begin(client, serverName);

      //If you need an HTTP request with a content type: application/json, use the following:
      http.addHeader("Content-Type", "application/json");
       int httpResponseCode = http.POST("{\"Vpv1_V\":\""+cT(Vpv1_V[i])+"\",\"Ipv1_A\":\""+cT(Ipv1_A[i])+"\",\"Ppv1_W\":\""+cT(Ppv1_W[i])+"\",\"Pac_W\":\""+cT(Pac_W[i])+"\",\"Epv1_today_kWh\":\""+cT(Epv1_today_kWh[i])+"\",\"Epv1_total_kWh\":\""+cT(Epv1_total_kWh[i])+"\"}");
      Serial.print("HTTP Response code: ");
      Serial.println(httpResponseCode);
        
      // Free resources
      http.end();
      Serial.println(i);
    }
    else {
      Serial.println("WiFi Disconnected");
    }
    lastTime = millis();
  }
  }
}
