// Load package
const ARIMAPromise = require('arima/async')

// Synthesize timeseries
//const ts = Array(24).fill(0).map((_, i) => i + Math.random() / 5)
const ts = [0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    71.1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    141.6,
    367.8,
    283,
    212,
    211.8,
    208.6,
    283.5,
    348.3,
    495.2,
    521.3,
    518.3,
    611.2,
    846.1,
    924.7,
    880.8,
    770.4,
    684.8,
    328.1,
    141.4,
    70.7,
    70.6,
    239.8,
    445.5,
    507.5,
    581.7,
    637.7,
    689.9,
    699.7,
    819.9,
    817.7,
    942.9,
    1154.1,
    1316,
    1416.5,
    1471.8,
    1393.7,
    1326.4,
    1577.6,
    1703.6,
    2547.2,
    2781,
    2284.2,
    1710.9,
    1380.7,
    893.7,
    921,
    966,
    707.7,
    943.3,
    868.8,
    978.5,
    994.4,
    1227.2,
    1838.1,
    2131.9,
    2161.4,
    2391.8,
    2544.6,
    2728.6,
    3571.9,
    2810.7,
    2592.7,
    4603.8,
    4030,
    4016.6,
    3095.9,
    2723.3,
    2507.6,
    2463.5,
    3008.1,
    4377.7,
    4698.6,
    4550.1,
    2138.7,
    4499.1,
    4488.1,
    4294.5,
    4014.5,
    3879.9,
    4097.2,
    3962.2,
    3860.8,
    3908,
    1580,
    3969.5,
    1674.1,
    1612.5,
    828.8,
    1145.9,
    3985.4,
    3822,
    1737.8,
    2929.8,
    2084,
    1771.2,
    2832,
    2128.9,
    1770.7,
    994.5,
    1042.8,
    1213.3,
    1222.3,
    1244.3,
    1218.6,
    873.6,
    700.8,
    624.3,
    594.6,
    542.5,
    642.7,
    776,
    807.2,
    1055.4,
    919.5,
    788.9,
    574.4,
    416.9,
    393.3,
    358.7,
    286.7,
    214.7,
    71.3,
    71.2,
    71.1,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    70.6,
    70.7,
    140.7,
    282.2,
    282.1,
    352.7,
    352.8,
    455,
    448.5,
    437.8,
    450.8,
    446,
    458,
    422,
    397.5,
    762.2,
    728,
    929.9,
    841.4,
    573.7,
    725.3,
    444.4,
    349.9,
    419.6,
    510.8,
    758.9,
    956.2,
    943.7,
    1105.1,
    1380.9,
    1502.7,
    1376.2,
    1498.1,
    1314.2,
    1771.9,
    2160.3,
    1902.9,
    2482.9,
    2211.3,
    1718.6,
    1869.8,
    2488.9,
    1844.3,
    1817.3,
    1334.2,
    1608.4,
    2266.2,
    2897.8,
    3026.5,
    3327.7,
    2889.2,
    2575.7,
    2750.8,
    2273.5,
    1605.1,
    1727.7,
    2363.6,
    2855.3,
    2359.1,
    1946.6,
    969,
    838.5,
    1454.9,
    2010.1,
    2803.4,
    6659,
    2508.9,
    5196.4,
    4677.2,
    2992.5,
    3502.9,
    4446,
    6865.3,
    5983.4,
    6413.5,
    1948.5,
    4990.8,
    3042,
    1934.1,
    1544.1,
    822.9,
    982.7,
    2152.5,
    4811.2,
    2242,
    1991.8,
    1213.3,
    901.3,
    763.2,
    1184.5,
    5785.9,
    5922.6,
    4436.1,
    1152.6,
    350.2,
    0,
    70.1,
    210.6,
    70.1,
    0,
    0,
    70.4,
    140.9,
    140.9,
    211.4,
    211.2,
    277,
    353.9,
    321.9,
    401.8,
    439.9,
    520.3,
    762.3,
    888.3,
    967.1,
    1000.6,
    929.1,
    856.9,
    867,
    1033.5,
    971.8,
    887.3,
    800.2,
    795.1,
    859.3,
    846.1,
    848.4,
    946.4,
    849.9,
    744.9,
    564.7,
    424.7,
    353.2,
    141.1,
    140.9,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    70.7,
    141.6,
    141.4,
    212.5,
    212,
    352.9,
    340.1,
    315.6,
    349.2,
    211.2,
    140.4,
    140.6,
    140.5,
    140.1,
    141.1,
    282.1,
    500.1,
    655.3,
    903,
    492,
    312.3,
    269.7,
    337.4,
    748.3,
    723.8,
    582,
    582,
    818.3,
    1020.3,
    1004.1,
    882.2,
    822.8,
    1165.9,
    1782.4,
    1742.4,
    1180.1,
    1534.9,
    2014.3,
    1561.3,
    1325.1,
    1067.8,
    875,
    778.3,
    995.1,
    2120.2,
    2187,
    1700.3,
    1403.9,
    1196.6,
    1730.4,
    1712.4,
    1681.4,
    1263.2,
    951.2,
    904.1,
    821.8,
    281.2,
    210.4,
    70,
    140.1,
    420.5,
    1715.3,
    1234.9,
    1158.1,
    1927.9,
    2434.6,
    2466.1,
    2079.1,
    2025.2,
    965.9,
    893.6,
    782.3,
    687.2,
    1199.5,
    2467.6,
    2366.7,
    1483.8,
    1584.9,
    1591.1,
    1587.4,
    1700.9,
    2057.3,
    1792.4,
    1778.7,
    1531.2,
    1370.7,
    1250.8,
    1200.8,
    1200.6,
    1232.4,
    1290.6,
    1385,
    1466.3,
    1544,
    1605.3,
    1719.2,
    1804.2,
    2017.9,
    2156.6,
    2676.2,
    2692,
    2329,
    2427.8,
    3801.8,
    3671.1,
    3669.5,
    3797,
    3998.3,
    3271.5,
    2727,
    2301.1,
    2792.5,
    2191.9,
    3013,
    3461,
    3349.2,
    3327.9,
    3637.3,
    3722.3,
    3674.3,
    3560.1,
    3275.7,
    1619.9,
    1997.1,
    1644,
    2367.1,
    1549.9,
    1072.5,
    1126.6,
    968.2,
    734.7,
    768.1,
    1012.2,
    679.9,
    355.7,
    374.3,
    286.4,
    214.7,
    71.4,
    71.2,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    71.3,
    71,
    70.9,
    71,
    70.8,
    141.8,
    141.3,
    212.7,
    212.4,
    261.5,
    282.9,
    353.4,
    352.7,
    516.3,
    621.6,
    748.5,
    837.3,
    808.6,
    809.3,
    883.3,
    980,
    1087.1,
    1201.9,
    1164.9,
    1526.3,
    1712.2,
    1631.3,
    1487.9,
    1308.2,
    1093.8,
    968.6,
    1015.8,
    1299.3,
    1192.1,
    1108.8,
    950.5,
    969.6,
    1202.9,
    1487.4,
    1658.9,
    1798.6,
    1895.6,
    1928.5,
    1945.9,
    2086.7,
    2207.3,
    2164.3,
    2171.6,
    2383.8,
    2590.1,
    2734,
    2839.7,
    2688,
    2298.1,
    1989.3,
    2759.2,
    2943.5,
    2862.1,
    3197.9,
    2988,
    3016.3,
    2661.6,
    2428,
    2049,
    3321.3,
    2622.9,
    2062.5,
    2629.5,
    2598.9,
    2777.9,
    2490.9,
    2822.8,
    2413.7,
    1322.5,
    912.5,
    662.1,
    640.3,
    634.8,
    425.5,
    650.6,
    1059.8,
    1309.6,
    1525.5,
    1513.7,
    1242.7,
    1025.9,
    836.9,
    698.6,
    642.2,
    548.2,
    421.8,
    348.1,
    282.3,
    558.1,
    703.7,
    826.2,
    843,
    843.8,
    754,
    717.5,
    812.7,
    844.3,
    919.2,
    956.1,
    986.7,
    1014.4,
    1037.2,
    1078.4,
    1109,
    1150.3,
    1226.7,
    1136.4,
    913.5,
    1121.1,
    819.9,
    668.9,
    560,
    419.4,
    317.8,
    283.9,
    214.2,
    142.6,
    142.2,
    71.5,
    71.2,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    71.6,
    70.6,
    141,
    140.7,
    212.4,
    140.9,
    140.8,
    70.4,
    70.4,
    211.2,
    281.5,
    280.7,
    351,
    342.8,
    346.1,
    417,
    353,
    282.2,
    423.4,
    633.8,
    655,
    773.8,
    634.5,
    688.4,
    654.7,
    892.5,
    983.6,
    902.4,
    960.4,
    951.5,
    921.3,
    889.3,
    902.9,
    821.7,
    747.9,
    853.8,
    885.9,
    945.7,
    885.3,
    848.1,
    856.2,
    778.5,
    794.3,
    940.6,
    952.9,
    920.5,
    825.8,
    776.4,
    976,
    904.6,
    804.8,
    880.5,
    770.4,
    825.8,
    903.7,
    950.3,
    950.1,
    934.4,
    932.9,
    920.2,
    840.1,
    840.6,
    804.6,
    813.5,
    826.9,
    753.3,
    636.3,
    513.3,
    656.4,
    736,
    735,
    842.9,
    879.4,
    893,
    968.9,
    1062.1,
    1109.4,
    1152.6,
    1101.4,
    0,
    0,
    0,
    0,
    0,
    1545.8,
    1629.9,
    1404.7,
    1276.5,
    1353.3,
    1157.2,
    1248.6,
    1435.2,
    1699.4,
    1558.4,
    1271.1,
    1077.9,
    1096.4,
    1019.2,
    1108.7,
    1146.2,
    1111.2,
    910.6,
    839.8,
    930.8,
    712.2,
    579.3,
    303.2,
    254.1,
    140.3,
    70.1,
    70,
    0,
    0,
    0,
    0,
    70.7,
    70.6,
    70.9,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    71.3,
    140.8,
    281.5,
    353.1,
    444,
    537,
    586.7,
    671.4,
    653.4,
    634.1,
    491.4,
    491.2,
    575.7,
    652,
    627.8,
    634.2,
    709.9,
    800.9,
    921,
    1036.5,
    988.1,
    1082.8,
    1191.3,
    1299.9,
    1395.5,
    1361.9,
    1318.3,
    1330.9,
    1331.9,
    1270.5,
    1112.1,
    1154.8,
    1112.7,
    1124.1,
    1092.5,
    1183.4,
    1448,
    1616.2,
    1721.3,
    1925.3,
    2023.8,
    2192.2,
    2300.7,
    2113.1,
    2126.4,
    3133,
    2330,
    2287.5,
    1962.1,
    1387.5,
    1309.4,
    1510.7,
    1714.6,
    1812.9,
    2282.3,
    2732.1,
    2312.3,
    2380.3,
    2353,
    2219.9,
    2296.9,
    1999,
    1999.4,
    1969,
    1951.7,
    2436.4,
    2526.8,
    2263.7,
    2133.4,
    1996.1,
    1477.6,
    1533.7,
    1855.5,
    1557,
    1563.4,
    2122.1,
    2011.5,
    1731.7,
    1122.1,
    797.1,
    784.6,
    986.2,
    1758.9,
    2483.1,
    3032.9,
    1804.2,
    2148.2,
    2127.5,
    1927.8,
    1692.8,
    1552,
    1476.9,
    1429.7,
    1380.6,
    1351.1,
    1363.5,
    1417.8,
    1529.6,
    1861.9,
    1894.7,
    2105.3,
    2196.1,
    1957.6,
    1755.1,
    1631.9,
    1398.6,
    1268.3,
    1207.3,
    1184.2,
    1163.4,
    1148.3,
    1135.9,
    1147.7,
    1245.9,
    1218.6,
    1045.1,
    922.5,
    849.3,
    830.9,
    780.3,
    675.5,
    592.5,
    493.6,
    511.3,
    416.6,
    380.4,
    785.2,
    642.5,
    428.7,
    357.2,
    214.1,
    142.4,
    71,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    70.8,
    70.9,
    141.8,
    271.2,
    331.3,
    286.5,
    142.1,
    142.1,
    141.9,
    142.1,
    142,
    213.6,
    284.5,
    318.2,
    400.6,
    568,
    704,
    843.8,
    977.4,
    1044,
    1184.5,
    1181.3,
    1110.1,
    996.3,
    940,
    1256.6,
    1212.7,
    1202.8,
    1276.3,
    1131.3,
    1410.6,
    1553.6,
    1539.2,
    1585.7,
    1520,
    1814.3,
    2120.5,
    3249.7,
    3280.6,
    3707.2,
    3741.2,
    846.8,
    1299.8,
    4604.4,
    4815.3,
    4628.8,
    4639,
    4621.8,
    4526.7,
    4579.3,
    4565.4,
    4547.2,
    4733,
    4749.6,
    4800,
    4843.8,
    4800.3,
    4722.2
]
const arFt = [
    [0,0,0,0,0,0],
    [0,0,0,0,0,1],
    [0,0,0,0,0,2],
    [0,0,0,0,1,0],
    [0,0,0,0,1,1],
    [0,0,0,0,1,2],
    [0,0,0,0,2,0],
    [0,0,0,0,2,1],
    [0,0,0,0,2,2],
    [0,0,0,1,0,0],
    [0,0,0,1,0,1],
    [0,0,0,1,0,2],
    [0,0,0,1,1,0],
    [0,0,0,1,1,1],
    [0,0,0,1,1,2],
    [0,0,0,1,2,0],
    [0,0,0,1,2,1],
    [0,0,0,1,2,2],
    [0,0,0,2,0,0],
    [0,0,0,2,0,1],
    [0,0,0,2,0,2],
    [0,0,0,2,1,0],
    [0,0,0,2,1,1],
    [0,0,0,2,1,2],
    [0,0,0,2,2,0],
    [0,0,0,2,2,1],
    [0,0,0,2,2,2],//3index 1
    [0,0,1,0,0,0],
    [0,0,1,0,0,1],
    [0,0,1,0,0,2],
    [0,0,1,0,1,0],
    [0,0,1,0,1,1],
    [0,0,1,0,1,2],
    [0,0,1,0,2,0],
    [0,0,1,0,2,1],
    [0,0,1,0,2,2],
    [0,0,1,1,0,0],
    [0,0,1,1,0,1],
    [0,0,1,1,0,2],
    [0,0,1,1,1,0],
    [0,0,1,1,1,1],
    [0,0,1,1,1,2],
    [0,0,1,1,2,0],
    [0,0,1,1,2,1],
    [0,0,1,1,2,2],
    [0,0,1,2,0,0],
    [0,0,1,2,0,1],
    [0,0,1,2,0,2],
    [0,0,1,2,1,0],
    [0,0,1,2,1,1],
    [0,0,1,2,1,2],
    [0,0,1,2,2,0],
    [0,0,1,2,2,1],
    [0,0,1,2,2,2],//3 index 2
    [0,0,2,0,0,0],
    [0,0,2,0,0,1],
    [0,0,2,0,0,2],
    [0,0,2,0,1,0],
    [0,0,2,0,1,1],
    [0,0,2,0,1,2],
    [0,0,2,0,2,0],
    [0,0,2,0,2,1],
    [0,0,2,0,2,2],
    [0,0,2,1,0,0],
    [0,0,2,1,0,1],
    [0,0,2,1,0,2],
    [0,0,2,1,1,0],
    [0,0,2,1,1,1],
    [0,0,2,1,1,2],
    [0,0,2,1,2,0],
    [0,0,2,1,2,1],
    [0,0,2,1,2,2],
    [0,0,2,2,0,0],
    [0,0,2,2,0,1],
    [0,0,2,2,0,2],
    [0,0,2,2,1,0],
    [0,0,2,2,1,1],
    [0,0,2,2,1,2],
    [0,0,2,2,2,0],
    [0,0,2,2,2,1],
    [0,0,2,2,2,2],//2 index 1
    [0,1,0,0,0,0],
    [0,1,0,0,0,1],
    [0,1,0,0,0,2],
    [0,1,0,0,1,0],
    [0,1,0,0,1,1],
    [0,1,0,0,1,2],
    [0,1,0,0,2,0],
    [0,1,0,0,2,1],
    [0,1,0,0,2,2],
    [0,1,0,1,0,0],
    [0,1,0,1,0,1],
    [0,1,0,1,0,2],
    [0,1,0,1,1,0],
    [0,1,0,1,1,1],
    [0,1,0,1,1,2],
    [0,1,0,1,2,0],
    [0,1,0,1,2,1],
    [0,1,0,1,2,2],
    [0,1,0,2,0,0],
    [0,1,0,2,0,1],
    [0,1,0,2,0,2],
    [0,1,0,2,1,0],
    [0,1,0,2,1,1],
    [0,1,0,2,1,2],
    [0,1,0,2,2,0],
    [0,1,0,2,2,1],
    [0,1,0,2,2,2],
    [0,1,1,0,0,0],
    [0,1,1,0,0,1],
    [0,1,1,0,0,2],
    [0,1,1,0,1,0],
    [0,1,1,0,1,1],
    [0,1,1,0,1,2],
    [0,1,1,0,2,0],
    [0,1,1,0,2,1],
    [0,1,1,0,2,2],
    [0,1,1,1,0,0],
    [0,1,1,1,0,1],
    [0,1,1,1,0,2],
    [0,1,1,1,1,0],
    [0,1,1,1,1,1],
    [0,1,1,1,1,2],
    [0,1,1,1,2,0],
    [0,1,1,1,2,1],
    [0,1,1,1,2,2],
    [0,1,1,2,0,0],
    [0,1,1,2,0,1],
    [0,1,1,2,0,2],
    [0,1,1,2,1,0],
    [0,1,1,2,1,1],
    [0,1,1,2,1,2],
    [0,1,1,2,2,0],
    [0,1,1,2,2,1],
    [0,1,1,2,2,2],
    [0,1,2,0,0,0],
    [0,1,2,0,0,1],
    [0,1,2,0,0,2],
    [0,1,2,0,1,0],
    [0,1,2,0,1,1],
    [0,1,2,0,1,2],
    [0,1,2,0,2,0],
    [0,1,2,0,2,1],
    [0,1,2,0,2,2],
    [0,1,2,1,0,0],
    [0,1,2,1,0,1],
    [0,1,2,1,0,2],
    [0,1,2,1,1,0],
    [0,1,2,1,1,1],
    [0,1,2,1,1,2],
    [0,1,2,1,2,0],
    [0,1,2,1,2,1],
    [0,1,2,1,2,2],
    [0,1,2,2,0,0],
    [0,1,2,2,0,1],
    [0,1,2,2,0,2],
    [0,1,2,2,1,0],
    [0,1,2,2,1,1],
    [0,1,2,2,1,2],
    [0,1,2,2,2,0],
    [0,1,2,2,2,1],
    [0,1,2,2,2,2],
    [0,2,0,0,0,0],
    [0,2,0,0,0,1],
    [0,2,0,0,0,2],
    [0,2,0,0,1,0],
    [0,2,0,0,1,1],
    [0,2,0,0,1,2],
    [0,2,0,0,2,0],
    [0,2,0,0,2,1],
    [0,2,0,0,2,2],
    [0,2,0,1,0,0],
    [0,2,0,1,0,1],
    [0,2,0,1,0,2],
    [0,2,0,1,1,0],
    [0,2,0,1,1,1],
    [0,2,0,1,1,2],
    [0,2,0,1,2,0],
    [0,2,0,1,2,1],
    [0,2,0,1,2,2],
    [0,2,0,2,0,0],
    [0,2,0,2,0,1],
    [0,2,0,2,0,2],
    [0,2,0,2,1,0],
    [0,2,0,2,1,1],
    [0,2,0,2,1,2],
    [0,2,0,2,2,0],
    [0,2,0,2,2,1],
    [0,2,0,2,2,2],
    [0,2,1,0,0,0],
    [0,2,1,0,0,1],
    [0,2,1,0,0,2],
    [0,2,1,0,1,0],
    [0,2,1,0,1,1],
    [0,2,1,0,1,2],
    [0,2,1,0,2,0],
    [0,2,1,0,2,1],
    [0,2,1,0,2,2],
    [0,2,1,1,0,0],
    [0,2,1,1,0,1],
    [0,2,1,1,0,2],
    [0,2,1,1,1,0],
    [0,2,1,1,1,1],
    [0,2,1,1,1,2],
    [0,2,1,1,2,0],
    [0,2,1,1,2,1],
    [0,2,1,1,2,2],
    [0,2,1,2,0,0],
    [0,2,1,2,0,1],
    [0,2,1,2,0,2],
    [0,2,1,2,1,0],
    [0,2,1,2,1,1],
    [0,2,1,2,1,2],
    [0,2,1,2,2,0],
    [0,2,1,2,2,1],
    [0,2,1,2,2,2],
    [0,2,2,0,0,0],
    [0,2,2,0,0,1],
    [0,2,2,0,0,2],
    [0,2,2,0,1,0],
    [0,2,2,0,1,1],
    [0,2,2,0,1,2],
    [0,2,2,0,2,0],
    [0,2,2,0,2,1],
    [0,2,2,0,2,2],
    [0,2,2,1,0,0],
    [0,2,2,1,0,1],
    [0,2,2,1,0,2],
    [0,2,2,1,1,0],
    [0,2,2,1,1,1],
    [0,2,2,1,1,2],
    [0,2,2,1,2,0],
    [0,2,2,1,2,1],
    [0,2,2,1,2,2],
    [0,2,2,2,0,0],
    [0,2,2,2,0,1],
    [0,2,2,2,0,2],
    [0,2,2,2,1,0],
    [0,2,2,2,1,1],
    [0,2,2,2,1,2],
    [0,2,2,2,2,0],
    [0,2,2,2,2,1],
    [0,2,2,2,2,2], //1 index 1
    [1,0,0,0,0,0],
    [1,0,0,0,0,1],
    [1,0,0,0,0,2],
    [1,0,0,0,1,0],
    [1,0,0,0,1,1],
    [1,0,0,0,1,2],
    [1,0,0,0,2,0],
    [1,0,0,0,2,1],
    [1,0,0,0,2,2],
    [1,0,0,1,0,0],
    [1,0,0,1,0,1],
    [1,0,0,1,0,2],
    [1,0,0,1,1,0],
    [1,0,0,1,1,1],
    [1,0,0,1,1,2],
    [1,0,0,1,2,0],
    [1,0,0,1,2,1],
    [1,0,0,1,2,2],
    [1,0,0,2,0,0],
    [1,0,0,2,0,1],
    [1,0,0,2,0,2],
    [1,0,0,2,1,0],
    [1,0,0,2,1,1],
    [1,0,0,2,1,2],
    [1,0,0,2,2,0],
    [1,0,0,2,2,1],
    [1,0,0,2,2,2],
    [1,0,1,0,0,0],
    [1,0,1,0,0,1],
    [1,0,1,0,0,2],
    [1,0,1,0,1,0],
    [1,0,1,0,1,1],
    [1,0,1,0,1,2],
    [1,0,1,0,2,0],
    [1,0,1,0,2,1],
    [1,0,1,0,2,2],
    [1,0,1,1,0,0],
    [1,0,1,1,0,1],
    [1,0,1,1,0,2],
    [1,0,1,1,1,0],
    [1,0,1,1,1,1],
    [1,0,1,1,1,2],
    [1,0,1,1,2,0],
    [1,0,1,1,2,1],
    [1,0,1,1,2,2],
    [1,0,1,2,0,0],
    [1,0,1,2,0,1],
    [1,0,1,2,0,2],
    [1,0,1,2,1,0],
    [1,0,1,2,1,1],
    [1,0,1,2,1,2],
    [1,0,1,2,2,0],
    [1,0,1,2,2,1],
    [1,0,1,2,2,2],
    [1,0,2,0,0,0],
    [1,0,2,0,0,1],
    [1,0,2,0,0,2],
    [1,0,2,0,1,0],
    [1,0,2,0,1,1],
    [1,0,2,0,1,2],
    [1,0,2,0,2,0],
    [1,0,2,0,2,1],
    [1,0,2,0,2,2],
    [1,0,2,1,0,0],
    [1,0,2,1,0,1],
    [1,0,2,1,0,2],
    [1,0,2,1,1,0],
    [1,0,2,1,1,1],
    [1,0,2,1,1,2],
    [1,0,2,1,2,0],
    [1,0,2,1,2,1],
    [1,0,2,1,2,2],
    [1,0,2,2,0,0],
    [1,0,2,2,0,1],
    [1,0,2,2,0,2],
    [1,0,2,2,1,0],
    [1,0,2,2,1,1],
    [1,0,2,2,1,2],
    [1,0,2,2,2,0],
    [1,0,2,2,2,1],
    [1,0,2,2,2,2],
    [1,1,0,0,0,0],
    [1,1,0,0,0,1],
    [1,1,0,0,0,2],
    [1,1,0,0,1,0],
    [1,1,0,0,1,1],
    [1,1,0,0,1,2],
    [1,1,0,0,2,0],
    [1,1,0,0,2,1],
    [1,1,0,0,2,2],
    [1,1,0,1,0,0],
    [1,1,0,1,0,1],
    [1,1,0,1,0,2],
    [1,1,0,1,1,0],
    [1,1,0,1,1,1],
    [1,1,0,1,1,2],
    [1,1,0,1,2,0],
    [1,1,0,1,2,1],
    [1,1,0,1,2,2],
    [1,1,0,2,0,0],
    [1,1,0,2,0,1],
    [1,1,0,2,0,2],
    [1,1,0,2,1,0],
    [1,1,0,2,1,1],
    [1,1,0,2,1,2],
    [1,1,0,2,2,0],
    [1,1,0,2,2,1],
    [1,1,0,2,2,2],
    [1,1,1,0,0,0],
    [1,1,1,0,0,1],
    [1,1,1,0,0,2],
    [1,1,1,0,1,0],
    [1,1,1,0,1,1],
    [1,1,1,0,1,2],
    [1,1,1,0,2,0],
    [1,1,1,0,2,1],
    [1,1,1,0,2,2],
    [1,1,1,1,0,0],
    [1,1,1,1,0,1],
    [1,1,1,1,0,2],
    [1,1,1,1,1,0],
    [1,1,1,1,1,1],
    [1,1,1,1,1,2],
    [1,1,1,1,2,0],
    [1,1,1,1,2,1],
    [1,1,1,1,2,2],
    [1,1,1,2,0,0],
    [1,1,1,2,0,1],
    [1,1,1,2,0,2],
    [1,1,1,2,1,0],
    [1,1,1,2,1,1],
    [1,1,1,2,1,2],
    [1,1,1,2,2,0],
    [1,1,1,2,2,1],
    [1,1,1,2,2,2],
    [1,1,2,0,0,0],
    [1,1,2,0,0,1],
    [1,1,2,0,0,2],
    [1,1,2,0,1,0],
    [1,1,2,0,1,1],
    [1,1,2,0,1,2],
    [1,1,2,0,2,0],
    [1,1,2,0,2,1],
    [1,1,2,0,2,2],
    [1,1,2,1,0,0],
    [1,1,2,1,0,1],
    [1,1,2,1,0,2],
    [1,1,2,1,1,0],
    [1,1,2,1,1,1],
    [1,1,2,1,1,2],
    [1,1,2,1,2,0],
    [1,1,2,1,2,1],
    [1,1,2,1,2,2],
    [1,1,2,2,0,0],
    [1,1,2,2,0,1],
    [1,1,2,2,0,2],
    [1,1,2,2,1,0],
    [1,1,2,2,1,1],
    [1,1,2,2,1,2],
    [1,1,2,2,2,0],
    [1,1,2,2,2,1],
    [1,1,2,2,2,2],
    [1,2,0,0,0,0],
    [1,2,0,0,0,1],
    [1,2,0,0,0,2],
    [1,2,0,0,1,0],
    [1,2,0,0,1,1],
    [1,2,0,0,1,2],
    [1,2,0,0,2,0],
    [1,2,0,0,2,1],
    [1,2,0,0,2,2],
    [1,2,0,1,0,0],
    [1,2,0,1,0,1],
    [1,2,0,1,0,2],
    [1,2,0,1,1,0],
    [1,2,0,1,1,1],
    [1,2,0,1,1,2],
    [1,2,0,1,2,0],
    [1,2,0,1,2,1],
    [1,2,0,1,2,2],
    [1,2,0,2,0,0],
    [1,2,0,2,0,1],
    [1,2,0,2,0,2],
    [1,2,0,2,1,0],
    [1,2,0,2,1,1],
    [1,2,0,2,1,2],
    [1,2,0,2,2,0],
    [1,2,0,2,2,1],
    [1,2,0,2,2,2],
    [1,2,1,0,0,0],
    [1,2,1,0,0,1],
    [1,2,1,0,0,2],
    [1,2,1,0,1,0],
    [1,2,1,0,1,1],
    [1,2,1,0,1,2],
    [1,2,1,0,2,0],
    [1,2,1,0,2,1],
    [1,2,1,0,2,2],
    [1,2,1,1,0,0],
    [1,2,1,1,0,1],
    [1,2,1,1,0,2],
    [1,2,1,1,1,0],
    [1,2,1,1,1,1],
    [1,2,1,1,1,2],
    [1,2,1,1,2,0],
    [1,2,1,1,2,1],
    [1,2,1,1,2,2],
    [1,2,1,2,0,0],
    [1,2,1,2,0,1],
    [1,2,1,2,0,2],
    [1,2,1,2,1,0],
    [1,2,1,2,1,1],
    [1,2,1,2,1,2],
    [1,2,1,2,2,0],
    [1,2,1,2,2,1],
    [1,2,1,2,2,2],
    [1,2,2,0,0,0],
    [1,2,2,0,0,1],
    [1,2,2,0,0,2],
    [1,2,2,0,1,0],
    [1,2,2,0,1,1],
    [1,2,2,0,1,2],
    [1,2,2,0,2,0],
    [1,2,2,0,2,1],
    [1,2,2,0,2,2],
    [1,2,2,1,0,0],
    [1,2,2,1,0,1],
    [1,2,2,1,0,2],
    [1,2,2,1,1,0],
    [1,2,2,1,1,1],
    [1,2,2,1,1,2],
    [1,2,2,1,2,0],
    [1,2,2,1,2,1],
    [1,2,2,1,2,2],
    [1,2,2,2,0,0],
    [1,2,2,2,0,1],
    [1,2,2,2,0,2],
    [1,2,2,2,1,0],
    [1,2,2,2,1,1],
    [1,2,2,2,1,2],
    [1,2,2,2,2,0],
    [1,2,2,2,2,1],
    [1,2,2,2,2,2],
    [2,0,0,0,0,0],
    [2,0,0,0,0,1],
    [2,0,0,0,0,2],
    [2,0,0,0,1,0],
    [2,0,0,0,1,1],
    [2,0,0,0,1,2],
    [2,0,0,0,2,0],
    [2,0,0,0,2,1],
    [2,0,0,0,2,2],
    [2,0,0,1,0,0],
    [2,0,0,1,0,1],
    [2,0,0,1,0,2],
    [2,0,0,1,1,0],
    [2,0,0,1,1,1],
    [2,0,0,1,1,2],
    [2,0,0,1,2,0],
    [2,0,0,1,2,1],
    [2,0,0,1,2,2],
    [2,0,0,2,0,0],
    [2,0,0,2,0,1],
    [2,0,0,2,0,2],
    [2,0,0,2,1,0],
    [2,0,0,2,1,1],
    [2,0,0,2,1,2],
    [2,0,0,2,2,0],
    [2,0,0,2,2,1],
    [2,0,0,2,2,2],
    [2,0,1,0,0,0],
    [2,0,1,0,0,1],
    [2,0,1,0,0,2],
    [2,0,1,0,1,0],
    [2,0,1,0,1,1],
    [2,0,1,0,1,2],
    [2,0,1,0,2,0],
    [2,0,1,0,2,1],
    [2,0,1,0,2,2],
    [2,0,1,1,0,0],
    [2,0,1,1,0,1],
    [2,0,1,1,0,2],
    [2,0,1,1,1,0],
    [2,0,1,1,1,1],
    [2,0,1,1,1,2],
    [2,0,1,1,2,0],
    [2,0,1,1,2,1],
    [2,0,1,1,2,2],
    [2,0,1,2,0,0],
    [2,0,1,2,0,1],
    [2,0,1,2,0,2],
    [2,0,1,2,1,0],
    [2,0,1,2,1,1],
    [2,0,1,2,1,2],
    [2,0,1,2,2,0],
    [2,0,1,2,2,1],
    [2,0,1,2,2,2],
    [2,0,2,0,0,0],
    [2,0,2,0,0,1],
    [2,0,2,0,0,2],
    [2,0,2,0,1,0],
    [2,0,2,0,1,1],
    [2,0,2,0,1,2],
    [2,0,2,0,2,0],
    [2,0,2,0,2,1],
    [2,0,2,0,2,2],
    [2,0,2,1,0,0],
    [2,0,2,1,0,1],
    [2,0,2,1,0,2],
    [2,0,2,1,1,0],
    [2,0,2,1,1,1],
    [2,0,2,1,1,2],
    [2,0,2,1,2,0],
    [2,0,2,1,2,1],
    [2,0,2,1,2,2],
    [2,0,2,2,0,0],
    [2,0,2,2,0,1],
    [2,0,2,2,0,2],
    [2,0,2,2,1,0],
    [2,0,2,2,1,1],
    [2,0,2,2,1,2],
    [2,0,2,2,2,0],
    [2,0,2,2,2,1],
    [2,0,2,2,2,2],
    [2,1,0,0,0,0],
    [2,1,0,0,0,1],
    [2,1,0,0,0,2],
    [2,1,0,0,1,0],
    [2,1,0,0,1,1],
    [2,1,0,0,1,2],
    [2,1,0,0,2,0],
    [2,1,0,0,2,1],
    [2,1,0,0,2,2],
    [2,1,0,1,0,0],
    [2,1,0,1,0,1],
    [2,1,0,1,0,2],
    [2,1,0,1,1,0],
    [2,1,0,1,1,1],
    [2,1,0,1,1,2],
    [2,1,0,1,2,0],
    [2,1,0,1,2,1],
    [2,1,0,1,2,2],
    [2,1,0,2,0,0],
    [2,1,0,2,0,1],
    [2,1,0,2,0,2],
    [2,1,0,2,1,0],
    [2,1,0,2,1,1],
    [2,1,0,2,1,2],
    [2,1,0,2,2,0],
    [2,1,0,2,2,1],
    [2,1,0,2,2,2],
    [2,1,1,0,0,0],
    [2,1,1,0,0,1],
    [2,1,1,0,0,2],
    [2,1,1,0,1,0],
    [2,1,1,0,1,1],
    [2,1,1,0,1,2],
    [2,1,1,0,2,0],
    [2,1,1,0,2,1],
    [2,1,1,0,2,2],
    [2,1,1,1,0,0],
    [2,1,1,1,0,1],
    [2,1,1,1,0,2],
    [2,1,1,1,1,0],
    [2,1,1,1,1,1],
    [2,1,1,1,1,2],
    [2,1,1,1,2,0],
    [2,1,1,1,2,1],
    [2,1,1,1,2,2],
    [2,1,1,2,0,0],
    [2,1,1,2,0,1],
    [2,1,1,2,0,2],
    [2,1,1,2,1,0],
    [2,1,1,2,1,1],
    [2,1,1,2,1,2],
    [2,1,1,2,2,0],
    [2,1,1,2,2,1],
    [2,1,1,2,2,2],
    [2,1,2,0,0,0],
    [2,1,2,0,0,1],
    [2,1,2,0,0,2],
    [2,1,2,0,1,0],
    [2,1,2,0,1,1],
    [2,1,2,0,1,2],
    [2,1,2,0,2,0],
    [2,1,2,0,2,1],
    [2,1,2,0,2,2],
    [2,1,2,1,0,0],
    [2,1,2,1,0,1],
    [2,1,2,1,0,2],
    [2,1,2,1,1,0],
    [2,1,2,1,1,1],
    [2,1,2,1,1,2],
    [2,1,2,1,2,0],
    [2,1,2,1,2,1],
    [2,1,2,1,2,2],
    [2,1,2,2,0,0],
    [2,1,2,2,0,1],
    [2,1,2,2,0,2],
    [2,1,2,2,1,0],
    [2,1,2,2,1,1],
    [2,1,2,2,1,2],
    [2,1,2,2,2,0],
    [2,1,2,2,2,1],
    [2,1,2,2,2,2],
    [2,2,0,0,0,0],
    [2,2,0,0,0,1],
    [2,2,0,0,0,2],
    [2,2,0,0,1,0],
    [2,2,0,0,1,1],
    [2,2,0,0,1,2],
    [2,2,0,0,2,0],
    [2,2,0,0,2,1],
    [2,2,0,0,2,2],
    [2,2,0,1,0,0],
    [2,2,0,1,0,1],
    [2,2,0,1,0,2],
    [2,2,0,1,1,0],
    [2,2,0,1,1,1],
    [2,2,0,1,1,2],
    [2,2,0,1,2,0],
    [2,2,0,1,2,1],
    [2,2,0,1,2,2],
    [2,2,0,2,0,0],
    [2,2,0,2,0,1],
    [2,2,0,2,0,2],
    [2,2,0,2,1,0],
    [2,2,0,2,1,1],
    [2,2,0,2,1,2],
    [2,2,0,2,2,0],
    [2,2,0,2,2,1],
    [2,2,0,2,2,2],
    [2,2,1,0,0,0],
    [2,2,1,0,0,1],
    [2,2,1,0,0,2],
    [2,2,1,0,1,0],
    [2,2,1,0,1,1],
    [2,2,1,0,1,2],
    [2,2,1,0,2,0],
    [2,2,1,0,2,1],
    [2,2,1,0,2,2],
    [2,2,1,1,0,0],
    [2,2,1,1,0,1],
    [2,2,1,1,0,2],
    [2,2,1,1,1,0],
    [2,2,1,1,1,1],
    [2,2,1,1,1,2],
    [2,2,1,1,2,0],
    [2,2,1,1,2,1],
    [2,2,1,1,2,2],
    [2,2,1,2,0,0],
    [2,2,1,2,0,1],
    [2,2,1,2,0,2],
    [2,2,1,2,1,0],
    [2,2,1,2,1,1],
    [2,2,1,2,1,2],
    [2,2,1,2,2,0],
    [2,2,1,2,2,1],
    [2,2,1,2,2,2],
    [2,2,2,0,0,0],
    [2,2,2,0,0,1],
    [2,2,2,0,0,2],
    [2,2,2,0,1,0],
    [2,2,2,0,1,1],
    [2,2,2,0,1,2],
    [2,2,2,0,2,0],
    [2,2,2,0,2,1],
    [2,2,2,0,2,2],
    [2,2,2,1,0,0],
    [2,2,2,1,0,1],
    [2,2,2,1,0,2],
    [2,2,2,1,1,0],
    [2,2,2,1,1,1],
    [2,2,2,1,1,2],
    [2,2,2,1,2,0],
    [2,2,2,1,2,1],
    [2,2,2,1,2,2],
    [2,2,2,2,0,0],
    [2,2,2,2,0,1],
    [2,2,2,2,0,2],
    [2,2,2,2,1,0],
    [2,2,2,2,1,1],
    [2,2,2,2,1,2],
    [2,2,2,2,2,0],
    [2,2,2,2,2,1],
    [2,2,2,2,2,2],
]
const forTestPredict = [
4404.9,
4996.6,
5140.1,
4614,
4965.6,
5268.4,
5026.9,
5206.5,
4898.9,
4694.6,
4846,
4860.5
]
const MAE = []
const MSE = []
const RMSE = []
//const mae = 0
const mse = 0
const rmse = 0

const calculateMeanAbsoluteError = (y, x) => {
    if (y.length === 0 || y.length !== x.length) {
      	return NaN;
    }
    let sum = 0;
    for (let i = 0; i < y.length; ++i) {
        sum += Math.abs(y[i] - x[i]);
    }
    //MAE
    return sum / y.length;
};

const calculateMeanSquareError = (y, x) => {
    if (y.length === 0 || y.length !== x.length) {
      	return NaN;
    }
    let sum = 0;
    for (let i = 0; i < y.length; ++i) {
        sum += (y[i] - x[i])**2;
    }
    //MAE
    return sum / y.length;
};

const calculateRootMeanSquareError = (y, x) => {
    if (y.length === 0 || y.length !== x.length) {
      	return NaN;
    }
    let sum = 0;
    for (let i = 0; i < y.length; ++i) {
        sum += (y[i] - x[i])**2;
    }
    //MAE
    return Math.sqrt(sum / y.length);
};

const calculateMeanAbsolutePercentageError = (y, x) => {
    if (y.length === 0 || y.length !== x.length) {
      	return NaN;
    }
    let sum = 0;
    for (let i = 0; i < y.length; ++i) {
        sum += Math.abs((x[i] - y[i])/x[i]);
    }
    //MAE
    return sum / y.length;
};

/*
ARIMAPromise.then(ARIMA => {
const arima = new ARIMA({ p: 2, d: 1, q: 2, P: 0, D: 0, Q: 0, S: 13, verbose: false }).train(ts)
const [pred, errors] = arima.predict(12)
console.log(pred.length)
console.log(pred)
})
*/

for (let i = 0; i < arFt.length; i++) {
    ARIMAPromise.then(ARIMA => {
        const arima = new ARIMA({ p: arFt[i][0], d: arFt[i][1], q: arFt[i][2], P: arFt[i][3], D: arFt[i][4], Q: arFt[i][5], S: 13, verbose: false }).train(ts)
        const [pred, errors] = arima.predict(12)
        const errorMae = calculateMeanAbsoluteError(forTestPredict, pred)
        const errorMse = calculateMeanSquareError(forTestPredict, pred)
        const errorRmse = calculateRootMeanSquareError(forTestPredict, pred)
        const errorMape = calculateMeanAbsolutePercentageError(forTestPredict, pred)
        console.log(arFt[i]+" MAE:"+errorMae+" MSE:"+errorMse+" RMSE:"+errorRmse+" MAPE:"+errorMape)
        console.log(pred)
    })
    
}


